/******************************************************************************\
FILE:           output.zm
AUTHOR:         Theo Veenker <theo.veenker@beexy.nl>
ADAPTED BY:     -

DESCRIPTION:

Defines the formats of output table(s).


HISTORY:
2012-03-19 TV   Created.
2019-02-10 IM Adapted to record 15 segments rather than 10.


\******************************************************************************/


// Test output table record.
record TestOutput
{
    int         trialnum;       // trial number

    int         id;             // item id
    ItemType    type;           // item type
    string      question;       // true/false statement about stimulus (partial)

    int         answer;         // the answer the participant gave

    int         qcorrect;       // correct answer to quest: 0=no, 1=yes, -1=n.a.
    int         rt1;            // reading time for starred segment 1 [ms]
    int         rt2;            // reading time for starred segment 2 [ms]
    int         rt3;            // reading time for starred segment 3 [ms]
    int         rt4;            // reading time for starred segment 4 [ms]
    int         rt5;            // reading time for starred segment 5 [ms]
    int         rt6;            // reading time for starred segment 6 [ms]
    int         rt7;            // reading time for starred segment 7 [ms]
    int         rt8;            // reading time for starred segment 8 [ms]
    int         rt9;            // reading time for starred segment 9 [ms]
    int         rt10;           // reading time for starred segment 10 [ms]
    int         rt11;           // reading time for starred segment 11 [ms]
    int         rt12;           // reading time for starred segment 12 [ms]
    int         rt13;           // reading time for starred segment 13 [ms]
    int         rt14;           // reading time for starred segment 14 [ms]
    int         rt15;           // reading time for starred segment 15 [ms]
}

//------------------------------------------------------------------------------

// Appends one row of data to test output table.
void test_output_append(TestOutput data)
{
    expdb.add_trial_data_record(namespace_name, "1", "Test results");
    
    expdb.set_trial_data_int_field("trialnum", data.trialnum, "trial number");
    expdb.set_trial_data_int_field("id", data.id , "item id");
    expdb.set_trial_data_string_field("type", string(data.type) , "item type");
    expdb.set_trial_data_string_field("question", data.question, "question");
    expdb.set_trial_data_int_field("qcorrect", data.qcorrect,
        "question correct: 1=correct, 0=incorrect -1=n.a.");
    expdb.set_trial_data_int_field("rt1", data.rt1, "reaction time segment 1");
    expdb.set_trial_data_int_field("rt2", data.rt2, "reaction time segment 2");
    expdb.set_trial_data_int_field("rt3", data.rt3, "reaction time segment 3");
    expdb.set_trial_data_int_field("rt4", data.rt4, "reaction time segment 4");
    expdb.set_trial_data_int_field("rt5", data.rt5, "reaction time segment 5");
    expdb.set_trial_data_int_field("rt6", data.rt6, "reaction time segment 6");
    expdb.set_trial_data_int_field("rt7", data.rt7, "reaction time segment 7");
    expdb.set_trial_data_int_field("rt8", data.rt8, "reaction time segment 8");
    expdb.set_trial_data_int_field("rt9", data.rt9, "reaction time segment 9");
    expdb.set_trial_data_int_field("rt10", data.rt10, "reaction time segment 10");
    expdb.set_trial_data_int_field("rt11", data.rt11, "reaction time segment 11");
    expdb.set_trial_data_int_field("rt12", data.rt12, "reaction time segment 12");
    expdb.set_trial_data_int_field("rt13", data.rt13, "reaction time segment 13");
    expdb.set_trial_data_int_field("rt14", data.rt14, "reaction time segment 14");
    expdb.set_trial_data_int_field("rt15", data.rt15, "reaction time segment 15");
}

